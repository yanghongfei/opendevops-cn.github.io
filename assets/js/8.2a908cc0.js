(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{261:function(s,t,a){"use strict";a.r(t);var n=a(28),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"分布式部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式部署"}},[s._v("#")]),s._v(" 分布式部署")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("基于全Docker的分布式部署方式，建议线上使用。"),a("a",{attrs:{href:"https://www.bilibili.com/video/av53446517?from=search&seid=16003251072301252333",target:"_blank",rel:"noopener noreferrer"}},[s._v("部署视频入口"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[s._v("#")]),s._v(" 环境准备")]),s._v(" "),a("p",[a("strong",[s._v("建议配置")])]),s._v(" "),a("ul",[a("li",[s._v("系统：  CentOS7+")]),s._v(" "),a("li",[s._v("CPU：   4Core+")]),s._v(" "),a("li",[s._v("内存：  8G+")]),s._v(" "),a("li",[s._v("磁盘：  50G+")])]),s._v(" "),a("p",[a("strong",[s._v("基础环境")])]),s._v(" "),a("ul",[a("li",[s._v("版本约束\n"),a("ul",[a("li",[s._v("Python3.6")]),s._v(" "),a("li",[s._v("Redis3.2")]),s._v(" "),a("li",[s._v("MySQl5.7")]),s._v(" "),a("li",[s._v("RabbitMQ")]),s._v(" "),a("li",[s._v("Docker")]),s._v(" "),a("li",[s._v("Docker-compose")])])])]),s._v(" "),a("p",[a("strong",[s._v("优化系统")])]),s._v(" "),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[s._v("如果你的系统是新的，我们建议你先优化下系统，同样我们也提供了"),a("a",{attrs:{href:"https://github.com/opendevops-cn/opendevops/tree/master/scripts/system_init_v1.sh",target:"_blank",rel:"noopener noreferrer"}},[s._v("优化系统脚本"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("以下基础环境中，若你的系统中已经存在可跳过，直接配置，建议使用我们推荐的版本")])]),s._v(" "),a("p",[a("strong",[s._v("环境变量")])]),s._v(" "),a("blockquote",[a("p",[s._v("创建项目目录")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ mkdir -p /opt/codo/ && cd /opt/codo/\n")])])]),a("blockquote",[a("p",[s._v("以下内容贴入到"),a("code",[s._v("vim /opt/codo/env.sh")]),s._v("文件，主要修改配置地址和密码信息")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[31m 注意：token_secret一定要做修改，防止网站被攻击!!!!!!! "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m 注意：token_secret一定要做修改，防止网站被攻击!!!!!!! "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[33m 注意：token_secret一定要做修改，防止网站被攻击!!!!!!! "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#部署的IP地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCALHOST_IP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.10.10.12"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置你的MYSQL密码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"m9uSFL7duAVXfeAwGUSG"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 设置你的redis密码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REDIS_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cWCVKJ7ZHUK12mVbivUf"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### RabbitMQ用户密码信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MQ_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ss"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MQ_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5Q2ajBHRT2lFJjnvaU0g"')]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#codo-admin用到的cookie和token")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("cookie_secret")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nJ2oZis0V/xlArY2rzpIE6ioC9/KlqR2fd59sD=UXZJ=3OeROB"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里codo-admin和gw网关都会用到，一定要修改。可生成随意字符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("token_secret")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pXFb4i%*834gfdh963df718iodGq4dsafsdadg7yI6ImF1999aaG7"')]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##如果要进行读写分离，Master-slave主从请自行建立，一般情况下都是只用一个数据库就可以了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 写数据库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_DB_DBHOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.10.10.12"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_DB_DBPORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3306'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_DB_DBUSER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_DB_DBPWD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MYSQL_PASSWORD}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#export DEFAULT_DB_DBNAME=${mysql_database}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读数据库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("READONLY_DB_DBHOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10.10.10.12'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("READONLY_DB_DBPORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3306'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("READONLY_DB_DBUSER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("READONLY_DB_DBPWD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MYSQL_PASSWORD}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#export READONLY_DB_DBNAME=${mysql_database}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 消息队列")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_MQ_ADDR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10.10.10.12'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_MQ_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MQ_USER}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_MQ_PWD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MQ_PASSWORD}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缓存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_REDIS_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10.10.10.12'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_REDIS_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_REDIS_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REDIS_PASSWORD}")]),s._v("\n\n")])])]),a("p",[s._v("=="),a("strong",[s._v("最后一定不要忘记source")]),s._v("：==  "),a("code",[s._v("source /opt/codo/env.sh")])]),s._v(" "),a("p",[a("strong",[s._v("关闭SELINUX")])]),s._v(" "),a("ul",[a("li",[s._v("若已关闭请跳过")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#临时关闭")]),s._v("\n$ setenforce "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#或修改配置文件关闭,需要重启")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/selinux/config  \n\n将SELINUX"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("enforcing改为SELINUX"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled \n设置后需要重启才能生效  \n\n")])])]),a("p",[a("strong",[s._v("清空防火墙规则")])]),s._v(" "),a("p",[a("code",[s._v("注意，不要关闭防火墙，Docker需要用到NAT")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只清空filter链即可")]),s._v("\n$ iptables -F\n\n")])])]),a("p",[a("strong",[s._v("安装Python3")])]),s._v(" "),a("blockquote",[a("p",[s._v("建议使用Python36,若你的系统里面已经存在Python36可以跳过此步骤。")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: Start install python3 "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\nyum update -y\nyum groupinstall Development tools -y\nyum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" zlib-devel\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y openssl-devel libxslt-devel libxml2-devel libcurl-devel\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" python3 -y \n")])])]),a("p",[a("strong",[s._v("安装docker")])]),s._v(" "),a("blockquote",[a("p",[s._v("若已安装可跳过")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: Start install docker,docker-compose "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nyum-config-manager --enable docker-ce-edge\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动和开机自启")]),s._v("\n/bin/systemctl start docker.service\n\n/bin/systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker.service\n")])])]),a("p",[a("strong",[s._v("安装docker-compose编排工具")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3 get-pip.py 如果没有pip3 请安装\npip3 install docker-compose\n")])])]),a("p",[a("strong",[s._v("安装MySQL")])]),s._v(" "),a("blockquote",[a("p",[s._v("一般来说一个MySQL实例即可，如果有需求可以自行搭建主从，微服务每个服务都可以有自己的数据库")]),s._v(" "),a("p",[s._v("我们这里示例是用Docker部署的MySQL，如果你要用已有的数据库请修改"),a("code",[s._v("/opt/codo/env.sh")])])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo/codo-mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo/codo-mysql\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("docker-compose.yml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nmysql:\n  restart: unless-stopped\n  image: registry.cn-shanghai.aliyuncs.com/ss1917/mysql:5.7\n  volumes:\n    - /data/mysql:/var/lib/mysql\n    - /data/mysql_conf:/etc/mysql/conf.d\n  ports:\n    - "3306:3306"\n  environment:\n    - MYSQL_ROOT_PASSWORD='),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MYSQL_PASSWORD}")]),s._v("\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动 ")]),s._v("\ndocker-compose up -d\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装MySQL客户端")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" mysql -y  \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: mysql install success. "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: 最好提高下MySQL的最大链接数. "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: mysql -h127.0.0.1 -uroot -p"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MYSQL_PASSWORD}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[31m [ERROR]: mysql57 install faild "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" -3\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("ul",[a("li",[s._v("测试 "),a("code",[s._v("mysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD}")])])]),s._v(" "),a("p",[a("strong",[s._v("安装Redis")])]),s._v(" "),a("ul",[a("li",[s._v("创建 docker-compose.yml")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("source /opt/codo/env.sh\nmkdir -p /opt/codo/codo-redis && cd /opt/codo/codo-redis\ncat >docker-compose.yml <<EOF\nredis:\n    image: registry.cn-shanghai.aliyuncs.com/ss1917/redis:4\n    ports:\n      - 6379:6379\n    restart: unless-stopped\n    command: redis-server --requirepass ${REDIS_PASSWORD}\nEOF\n\n#启动\ndocker-compose up -d\n")])])]),a("ul",[a("li",[s._v("没有cli的同学，请"),a("code",[s._v("yum install redis -y")])]),s._v(" "),a("li",[s._v("测试 "),a("code",[s._v("redis-cli -h 127.0.0.1 -p 6379 -a ${REDIS_PASSWORD}")])])]),s._v(" "),a("p",[a("strong",[s._v("安装RabbitMQ")])]),s._v(" "),a("ul",[a("li",[s._v("创建 docker-compose.yml")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo/codo-mq "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo/codo-mq \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("docker-compose.yml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nrabbitmq:\n    restart: unless-stopped\n    image: registry.cn-shanghai.aliyuncs.com/ss1917/rabbitmq:3-management\n    environment:\n      - RABBITMQ_DEFAULT_USER="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MQ_USER}")]),s._v("\n      - RABBITMQ_DEFAULT_PASS="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MQ_PASSWORD}")]),s._v('\n    ports:\n      - "15672:15672"\n      - "5672:5672"\nEOF')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动")]),s._v("\ndocker-compose up -d\n")])])]),a("p",[a("strong",[s._v("安装DNS")])]),s._v(" "),a("ul",[a("li",[s._v("注意，这里如果你内部有自己DNS，你也可以选择使用你自己的")])]),s._v(" "),a("blockquote",[a("p",[s._v("部署内部DNS dnsmasq 用于服务间内部通信，API网关需要配置，切记")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: Start install dnsmasq "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" dnsmasq -y\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置上游DNS，毕竟你的Dns只是个代理")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/etc/resolv.dnsmasq "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nnameserver 114.114.114.114\nnameserver 8.8.8.8\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置host解析")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: 如果你是单机部署，那么你就将你的本机IP+模块域名解析即可，如果你是分布式部署的，那么每个模块对应的机器IP一定不要搞错，这个很重要，后面网关也要依赖此DNS去解析你的域名，帮你做服务转发的，切记！！！！\n "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/etc/dnsmasqhosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" demo-init.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" mg.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" task.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" gw.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" cmdb2.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" kerrigan.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" tools.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" cron.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LOCALHOST_IP")]),s._v(" dns.opendevops.cn\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: 刚装完DNS可以先不用改本机的DNS，有一部分人反应Docker Build时候会报连不上mirrors，装不了依赖。部署到API网关的时候，需要将本机DNS改成自己，不然没办法访问以上mg，cron，cmdb等内网域名\n"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意下一步是覆盖你本机的DNS，建议把你的DNS地址加在/etc/resolv.dnsmasq 里面 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -rp /etc/resolv.conf /etc/resolv.conf-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +%F"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# echo "nameserver $LOCALHOST_IP" > /etc/resolv.conf  ')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1i'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("ameserver "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LOCALHOST_IP}")]),s._v('"')]),s._v(" /etc/resolv.conf -i \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###注意注意， 这里修改完后，请你一定要确定你nameserver ${LOCALHOST_IP} 内部DNS在第一条、第一条、第一条，放在下面是不能正常解析的.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"resolv-file=/etc/resolv.dnsmasq"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/dnsmasq.conf\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"addn-hosts=/etc/dnsmasqhosts"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/dnsmasq.conf\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 启动")]),s._v("\n/bin/systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" dnsmasq.service\n/bin/systemctl start dnsmasq.service\nsystemctl status dnsmasq\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: dnsmasq install success. "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[31m [ERROR]: dnsmasq install faild "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" -6\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("p",[a("strong",[s._v("基础依赖部署完毕")])]),s._v(" "),a("h2",{attrs:{id:"项目前端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目前端"}},[s._v("#")]),s._v(" 项目前端")]),s._v(" "),a("blockquote",[a("p",[s._v("更新后的项目前端将不再让用户下载静态资源包，使用自动构建的方式，默认保持最新前端")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[ ! -d /opt/codo/codo/ ] && mkdir -p /opt/codo/codo/ && cd /opt/codo/codo/\n")])])]),a("p",[a("strong",[s._v("一、修改域名")])]),s._v(" "),a("p",[s._v("下列为默认域名，如果要修改访问入口地址请修改"),a("code",[s._v("server_name")]),s._v("对应的"),a("code",[s._v("demo-init.opendevops.cn")]),s._v("，确保能DNS解析到此域名，或者自己绑定hosts来测试一下")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("cat >codo_frontend.conf <<\\EOF\nserver {\n        listen       80;\n        server_name demo-init.opendevops.cn;\n        access_log /var/log/nginx/codo-access.log;\n        error_log  /var/log/nginx/codo-error.log;\n\n        location / {\n                    root /var/www/codo;\n                    index index.html index.htm;\n                    try_files $uri $uri/ /index.html;\n        }\n        location /api {\n                proxy_http_version 1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection \"upgrade\";\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n                add_header 'Access-Control-Allow-Origin' '*';\n                proxy_pass http://gw.opendevops.cn:8888;\n        }\n\n        location ~ /(.svn|.git|admin|manage|.sh|.bash)$ {\n            return 403;\n        }\n}\nEOF\n\n")])])]),a("p",[a("strong",[s._v("创建Dockerfile")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Dockerfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo\n\n#修改nginx配置\n#ADD nginx.conf /etc/nginx/nginx.conf\nADD codo_frontend.conf /etc/nginx/conf.d/codo_frontend.conf\n\nEXPOSE 80\nEXPOSE 443\n\nSTOPSIGNAL SIGTERM\nCMD ["nginx", "-g", "daemon off;"]\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("创建 docker-compose.yml")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("docker-compose.yml "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\ncodo:\n  restart: unless-stopped\n  image: codo_image\n  volumes:\n    - /var/log/nginx/:/var/log/nginx/\n    - /sys/fs/cgroup:/sys/fs/cgroup\n  ports:\n    - "80:80"\n    - "443:443"\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("三、编译，启动")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -t codo_image\ndocker-compose up -d\n")])])]),a("p",[a("strong",[s._v("四、测试")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("curl  0.0.0.0:80\ntailf  /var/log/nginx/codo-access.log\n")])])]),a("h2",{attrs:{id:"管理后端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理后端"}},[s._v("#")]),s._v(" 管理后端")]),s._v(" "),a("p",[a("code",[s._v("codo-admin")]),s._v("是基于tornado框架 restful风格的API 实现后台管理,"),a("a",{attrs:{href:"https://github.com/opendevops-cn/codo-admin",target:"_blank",rel:"noopener noreferrer"}},[s._v("codo详细参考"),a("OutboundLink")],1),s._v(",搭配使用"),a("code",[s._v("codo")]),s._v("前端(iView+ vue)组成的一套后台用户 权限以及系统管理的解决方案（提供登录，注册 密码修改 鉴权 用户管理 角色管理 权限管理 前端组件管理 前端路由管理 通知服务API 系统基础信息接口）")]),s._v(" "),a("p",[a("strong",[s._v("获取代码")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/opendevops-cn/codo-admin.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" codo-admin\n")])])]),a("p",[a("strong",[s._v("修改相关配置")])]),s._v(" "),a("p",[s._v("修改"),a("code",[s._v("settings.py")]),s._v("配置")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：这里的"),a("code",[s._v("cookie_secret")]),s._v("和"),a("code",[s._v("token_secret")]),s._v("必须和你的env.sh里面的保持一致，后续网关也要用到这个。若不保持一直登陆后校验不通过回被自动踢回，会导致页面一直不停的刷新")])]),s._v(" "),a("p",[a("code",[s._v("注意：这里的token_secret必须要和你的网关保持一致，这个值是从env.sh拿来的，一定要做修改，防止网站被攻击，如果secret包含正则符号会导致sed失败，请仔细检查")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入环境变量文件，最开始准备的环境变量文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#cookie_secret = .*#cookie_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cookie_secret}")]),s._v("'#g\"")]),s._v(" settings.py  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#token_secret = .*#token_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${token_secret}")]),s._v("'#g\"")]),s._v(" settings.py     \n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mysql配置信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##我们项目支持取env环境变量，但是还是建议修改下。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_admin'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBHOST = .*#DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPORT = .*#DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBUSER = .*#DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPWD = .*#DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBNAME = .*#DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只读MySQL配置，若是单台也直接写成Master地址即可")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBHOST = .*#READONLY_DB_DBHOST = os.getenv('READONLY_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPORT = .*#READONLY_DB_DBPORT = os.getenv('READONLY_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBUSER = .*#READONLY_DB_DBUSER = os.getenv('READONLY_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPWD = .*#READONLY_DB_DBPWD = os.getenv('READONLY_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBNAME = .*#READONLY_DB_DBNAME = os.getenv('READONLY_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#redis配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_HOST = .*#DEFAULT_REDIS_HOST = os.getenv('DEFAULT_REDIS_HOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_HOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PORT = .*#DEFAULT_REDIS_PORT = os.getenv('DEFAULT_REDIS_PORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PASSWORD = .*#DEFAULT_REDIS_PASSWORD = os.getenv('DEFAULT_REDIS_PASSWORD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PASSWORD}")]),s._v("')#g\"")]),s._v(" settings.py\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Dockerfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo-admin\n\nADD settings.py /var/www/codo-admin/\n\n# COPY doc/nginx_ops.conf /etc/nginx/conf.d/default.conf\n# COPY doc/supervisor_ops.conf  /etc/supervisord.conf\n\nEXPOSE 80\nCMD ["/usr/bin/supervisord"]\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("编译，启动")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bulid 镜像")]),s._v("\ndocker build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -t do_mg_image\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动")]),s._v("\ndocker-compose up -d\n")])])]),a("p",[a("strong",[s._v("创建数据库")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("mysql -h127.0.0.1 -uroot -p"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${MYSQL_PASSWORD}")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'create database codo_admin default character set utf8mb4 collate utf8mb4_unicode_ci;'")]),s._v("\n")])])]),a("p",[a("strong",[s._v("初始化表结构")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" docker exec -ti codo-admin_do_mg_1  /usr/local/bin/python3 /var/www/codo-admin/db_sync.py\n")])])]),a("p",[a("strong",[s._v("导入数据")])]),s._v(" "),a("p",[s._v("主要是菜单，组件，权限列表，内置的用户等")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#导入数据\nmysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD} codo_admin < ./doc/codo_admin_beta0.3.sql\n")])])]),a("p",[a("strong",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose  restart \n")])])]),a("p",[a("strong",[s._v("测试codo-admin")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 01.日志")]),s._v("\ntailf  /var/log/supervisor/mg.log  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#确认没有报错")]),s._v("\n")])])]),a("p",[a("strong",[s._v("codo-admin 部署完毕")])]),s._v(" "),a("h2",{attrs:{id:"资产管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资产管理"}},[s._v("#")]),s._v(" 资产管理")]),s._v(" "),a("p",[a("strong",[s._v("下载代码")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: codo_cmdb(资产管理) Start install. "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/opendevops-cn/codo-cmdb.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" codo-cmdb\n")])])]),a("p",[a("strong",[s._v("修改配置")])]),s._v(" "),a("ul",[a("li",[s._v("修改"),a("code",[s._v("settings.py")]),s._v("配置信息")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入环境变量文件，最开始准备的环境变量文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#后端数据库名称,建议不要修改，初始化data.sql已经指定了数据库名字，若需改请一块修改")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CMDB_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_cmdb'")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#任务系统的域名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#cookie_secret = .*#cookie_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cookie_secret}")]),s._v("'#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mysql配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBHOST = .*#DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPORT = .*#DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBUSER = .*#DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPWD = .*#DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBNAME = .*#DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CMDB_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只读MySQL配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBHOST = .*#READONLY_DB_DBHOST = os.getenv('READONLY_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPORT = .*#READONLY_DB_DBPORT = os.getenv('READONLY_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBUSER = .*#READONLY_DB_DBUSER = os.getenv('READONLY_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPWD = .*#READONLY_DB_DBPWD = os.getenv('READONLY_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBNAME = .*#READONLY_DB_DBNAME = os.getenv('READONLY_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CMDB_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#redis配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_HOST = .*#DEFAULT_REDIS_HOST = os.getenv('DEFAULT_REDIS_HOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_HOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PORT = .*#DEFAULT_REDIS_PORT = os.getenv('DEFAULT_REDIS_PORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PASSWORD = .*#DEFAULT_REDIS_PASSWORD = os.getenv('DEFAULT_REDIS_PASSWORD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PASSWORD}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这里如果配置codo-task的数据库地址，则将数据同步到作业配置")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TASK_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_task'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#CODO_TASK_DB_HOST = .*#CODO_TASK_DB_HOST = os.getenv('CODO_TASK_DB_HOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#CODO_TASK_DB_PORT = .*#CODO_TASK_DB_PORT = os.getenv('CODO_TASK_DB_PORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#CODO_TASK_DB_USER = .*#CODO_TASK_DB_USER = os.getenv('CODO_TASK_DB_USER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#CODO_TASK_DB_PWD = .*#CODO_TASK_DB_PWD = os.getenv('CODO_TASK_DB_PWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#CODO_TASK_DB_DBNAME = .*#CODO_TASK_DB_DBNAME = os.getenv('CODO_TASK_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TASK_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n")])])]),a("ul",[a("li",[s._v("AWS事件和WebTerminnal配置")])]),s._v(" "),a("blockquote",[a("p",[s._v("首先将webterminal部署上去")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker pull webterminal/webterminallte\ndocker run -itd -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":80 webterminal/webterminallte\n")])])]),a("p",[a("code",[s._v("修改settings.py文件")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Aws Events 事件邮件通知人")]),s._v("\nAWS_EVENT_TO_EMAIL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1111@qq.com,2222@gmail.com'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Web Terminal 地址，请填写你部署的webterminal地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意这里是填写你上面docker run的机器外网IP")]),s._v("\nWEB_TERMINAL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://1.1.1.1:8080'")]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Dockerfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo-cmdb\n\n#修改应用配置\nADD settings.py /var/www/codo-cmdb/\n\n#修改nginx配置和守护配置\n#COPY doc/nginx_ops.conf /etc/nginx/conf.d/default.conf\n#COPY doc/supervisor_ops.conf  /etc/supervisord.conf\n\nEXPOSE 80\nCMD ["/usr/bin/supervisord"]\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("打包镜像")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build . -t codo_cmdb  \n")])])]),a("p",[a("strong",[s._v("启动Docker")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose up -d\n")])])]),a("p",[a("strong",[s._v("创建数据库")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD} -e 'create database `codo_cmdb` default character set utf8mb4 collate utf8mb4_unicode_ci;'\n")])])]),a("p",[a("strong",[s._v("初始化表结构")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -ti codo-cmdb_codo_cmdb_1 /usr/local/bin/python3 /var/www/codo-cmdb/db_sync.py\n")])])]),a("p",[a("strong",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose  restart \n")])])]),a("p",[a("strong",[s._v("日志文件")])]),s._v(" "),a("ul",[a("li",[s._v("服务日志："),a("code",[s._v("/var/log/supervisor/cmdb.log")]),s._v("  #主程序日志")]),s._v(" "),a("li",[s._v("定时日志："),a("code",[s._v("/var/log/supervisor/cmdb_cron.log")]),s._v(" #一些后端守护自动运行的日志")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("tailf /var/log/supervisor/cmdb.log\ntailf /var/log/supervisor/cmdb_cron.log \n")])])]),a("p",[a("strong",[s._v("资产管理系统部署完成")])]),s._v(" "),a("h2",{attrs:{id:"定时任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时任务"}},[s._v("#")]),s._v(" 定时任务")]),s._v(" "),a("blockquote",[a("p",[s._v("CODO项目定时任务模块，定时任务完全兼容crontab，支持到秒级")])]),s._v(" "),a("p",[s._v("备注：")]),s._v(" "),a("p",[s._v("Docker部署需要将你的脚本目录单独挂载出来，若不理解的同学参考："),a("a",{attrs:{href:"https://bbs.opendevops.cn/topic/65/codo-cron-%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[s._v("codo-cron本地部署方式"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[s._v("下载代码")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: codo_cron(定时任务) Start install. "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/opendevops-cn/codo-cron.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" codo-cron\n")])])]),a("p",[a("strong",[s._v("修改配置")])]),s._v(" "),a("blockquote",[a("p",[s._v("同样，这里codo-cron也支持取env环境变量，建议还是修改下默认配置")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入环境变量文件，最开始准备的环境变量文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#后端数据库名称,建议不要修改，初始化data.sql已经指定了数据库名字，若需改请一块修改")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CRON_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_cron'")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#cookie_secret = .*#cookie_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cookie_secret}")]),s._v("'#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mysql配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBHOST = .*#DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPORT = .*#DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBUSER = .*#DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPWD = .*#DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBNAME = .*#DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CRON_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只读MySQL配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBHOST = .*#READONLY_DB_DBHOST = os.getenv('READONLY_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPORT = .*#READONLY_DB_DBPORT = os.getenv('READONLY_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBUSER = .*#READONLY_DB_DBUSER = os.getenv('READONLY_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPWD = .*#READONLY_DB_DBPWD = os.getenv('READONLY_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBNAME = .*#READONLY_DB_DBNAME = os.getenv('READONLY_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CRON_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Dockerfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo-cron\n\n#修改应用配置\nADD settings.py /var/www/codo-cron/\n\nEXPOSE 80\nCMD ["/usr/bin/supervisord"]\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("编译，启动")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#编译镜像\ndocker build . -t codo_cron_image\n#启动\ndocker-compose up -d\n")])])]),a("p",[a("strong",[s._v("创建数据库")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD} -e 'create database `codo_cron` default character set utf8mb4 collate utf8mb4_unicode_ci;'\n")])])]),a("p",[a("strong",[s._v("初始化表结构")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -ti codo-cron_codo_cron_1  /usr/local/bin/python3 /var/www/codo-cron/db_sync.py\n")])])]),a("p",[a("strong",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose  restart \n")])])]),a("p",[a("strong",[s._v("测试")])]),s._v(" "),a("blockquote",[a("p",[s._v("日志文件位置统一：/var/log/supervisor/")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("01. 查看日志\ntailf /var/log/supervisor/cron.log   #确认没报错\n")])])]),a("p",[a("strong",[s._v("定时任务系统部署完成")])]),s._v(" "),a("h2",{attrs:{id:"任务系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务系统"}},[s._v("#")]),s._v(" 任务系统")]),s._v(" "),a("blockquote",[a("p",[s._v("CODO任务系统，负责整个系统中任务调度，此功能是必须要安装的")])]),s._v(" "),a("p",[a("strong",[s._v("下载代码")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: codo-task(任务系统) Start install. "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/opendevops-cn/codo-task.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" codo-task\n\n")])])]),a("p",[a("strong",[s._v("修改配置")])]),s._v(" "),a("blockquote",[a("p",[s._v("同样，这里codo-task也支持取env环境变量，建议还是修改下默认配置")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入环境变量文件，最开始准备的环境变量文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TASK_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_task'")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#任务系统的域名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#cookie_secret = .*#cookie_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cookie_secret}")]),s._v("'#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mysql配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBHOST = .*#DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPORT = .*#DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBUSER = .*#DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPWD = .*#DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBNAME = .*#DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TASK_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只读MySQL配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBHOST = .*#READONLY_DB_DBHOST = os.getenv('READONLY_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPORT = .*#READONLY_DB_DBPORT = os.getenv('READONLY_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBUSER = .*#READONLY_DB_DBUSER = os.getenv('READONLY_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPWD = .*#READONLY_DB_DBPWD = os.getenv('READONLY_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBNAME = .*#READONLY_DB_DBNAME = os.getenv('READONLY_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TASK_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#redis配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_HOST = .*#DEFAULT_REDIS_HOST = os.getenv('DEFAULT_REDIS_HOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_HOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PORT = .*#DEFAULT_REDIS_PORT = os.getenv('DEFAULT_REDIS_PORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PASSWORD = .*#DEFAULT_REDIS_PASSWORD = os.getenv('DEFAULT_REDIS_PASSWORD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PASSWORD}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#MQ配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_MQ_ADDR = .*#DEFAULT_MQ_ADDR = os.getenv('DEFAULT_MQ_ADDR', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_MQ_ADDR}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_MQ_USER = .*#DEFAULT_MQ_USER = os.getenv('DEFAULT_MQ_USER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_MQ_USER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_MQ_PWD = .*#DEFAULT_MQ_PWD = os.getenv('DEFAULT_MQ_PWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_MQ_PWD}")]),s._v("')#g\"")]),s._v(" settings.py\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Dockerfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo-task\n\n#修改应用配置\nADD settings.py /var/www/codo-task/\n\n#修改nginx配置和守护配置\n#COPY doc/nginx_ops.conf /etc/nginx/conf.d/default.conf\n#COPY doc/supervisor_ops.conf  /etc/supervisord.conf\n\nEXPOSE 80\nCMD ["/usr/bin/supervisord"]\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("编译，启动")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#编译镜像")]),s._v("\ndocker build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -t codo_task_image\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动")]),s._v("\ndocker-compose up -d\n")])])]),a("p",[a("strong",[s._v("创建数据库")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD} -e 'create database `codo_task` default character set utf8mb4 collate utf8mb4_unicode_ci;'\n")])])]),a("p",[a("strong",[s._v("初始化表结构")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -ti codo-task_codo_task_1  /usr/local/bin/python3 /var/www/codo-task/db_sync.py\n")])])]),a("p",[a("strong",[s._v("导入数据")])]),s._v(" "),a("p",[s._v("暂无")]),s._v(" "),a("p",[a("strong",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose  restart \n")])])]),a("p",[a("strong",[s._v("测试")])]),s._v(" "),a("blockquote",[a("p",[s._v("日志文件位置统一：/var/log/supervisor/")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("01. 查看日志\ntailf /var/log/supervisor/task_scheduler.log  #确认没报错\ntailf /var/log/supervisor/exec_task.log   #执行任务的日志\n")])])]),a("p",[a("strong",[s._v("任务系统部署完成")])]),s._v(" "),a("h2",{attrs:{id:"运维工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运维工具"}},[s._v("#")]),s._v(" 运维工具")]),s._v(" "),a("blockquote",[a("p",[s._v("CODO运维工具支持：告警管理、项目管理、事件管理、加密解密、随机密码、提醒管理等")])]),s._v(" "),a("p",[a("strong",[s._v("获取代码")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/opendevops-cn/codo-tools.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" codo-tools\n")])])]),a("p",[a("strong",[s._v("修改相关配置")])]),s._v(" "),a("p",[s._v("修改"),a("code",[s._v("settings.py")]),s._v(" 配置")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入环境变量文件，最开始准备的环境变量文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#cookie_secret = .*#cookie_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cookie_secret}")]),s._v("'#g\"")]),s._v(" settings.py \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mysql配置信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##我们项目支持取env环境变量，但是还是建议修改下。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_tools'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBHOST = .*#DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPORT = .*#DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBUSER = .*#DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPWD = .*#DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBNAME = .*#DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#redis配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_HOST = .*#DEFAULT_REDIS_HOST = os.getenv('DEFAULT_REDIS_HOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_HOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PORT = .*#DEFAULT_REDIS_PORT = os.getenv('DEFAULT_REDIS_PORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_REDIS_PASSWORD = .*#DEFAULT_REDIS_PASSWORD = os.getenv('DEFAULT_REDIS_PASSWORD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_REDIS_PASSWORD}")]),s._v("')#g\"")]),s._v(" settings.py\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Dockerfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo-tools\n\n#修改应用配置\nADD settings.py /var/www/codo-tools/\n\n#修改nginx配置和守护配置\n#COPY doc/nginx_ops.conf /etc/nginx/conf.d/default.conf\n#COPY doc/supervisor_ops.conf  /etc/supervisord.conf\n\nEXPOSE 80\nCMD ["/usr/bin/supervisord"]\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("编译镜像")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -t codo_tools\n")])])]),a("p",[a("strong",[s._v("启动")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose up -d\n")])])]),a("p",[a("strong",[s._v("创建数据库")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD} -e 'create database `codo_tools` default character set utf8mb4 collate utf8mb4_unicode_ci;'\n")])])]),a("p",[a("strong",[s._v("初始化表结构")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -ti  codo-tools_codo_tools_1  /usr/local/bin/python3 /var/www/codo-tools/db_sync.py \n")])])]),a("p",[a("strong",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose  restart \n")])])]),a("p",[a("strong",[s._v("测试codo-tools")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 01.日志")]),s._v("\ntailf /var/log/supervisor/tools.log  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#服务日志，确认没有报错")]),s._v("\ntailf /var/log/supervisor/cron_jobs.log  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定时提醒日志")]),s._v("\n")])])]),a("p",[a("strong",[s._v("运维工具系统部署完成")])]),s._v(" "),a("h2",{attrs:{id:"配置中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置中心"}},[s._v("#")]),s._v(" 配置中心")]),s._v(" "),a("p",[a("strong",[s._v("获取代码")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/opendevops-cn/kerrigan.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" kerrigan\n")])])]),a("p",[a("strong",[s._v("修改相关配置")])]),s._v(" "),a("p",[s._v("修改"),a("code",[s._v("settings.py")]),s._v("配置")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入环境变量文件，最开始准备的环境变量文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改管理后端域名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#cookie_secret = .*#cookie_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cookie_secret}")]),s._v("'#g\"")]),s._v(" settings.py \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mysql配置信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##我们项目支持取env环境变量，但是还是建议修改下。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DEFAULT_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_kerrigan'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBHOST = .*#DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPORT = .*#DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBUSER = .*#DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPWD = .*#DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBNAME = .*#DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只读MySQL配置，若是单台也直接写成Master地址即可")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBHOST = .*#READONLY_DB_DBHOST = os.getenv('READONLY_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPORT = .*#READONLY_DB_DBPORT = os.getenv('READONLY_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBUSER = .*#READONLY_DB_DBUSER = os.getenv('READONLY_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPWD = .*#READONLY_DB_DBPWD = os.getenv('READONLY_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBNAME = .*#READONLY_DB_DBNAME = os.getenv('READONLY_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('cat >Dockerfile <<EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo-kerrigan\n\n#修改应用配置\nADD settings.py /var/www/kerrigan/\n\n#修改nginx配置和守护配置\n#COPY doc/nginx_ops.conf /etc/nginx/conf.d/default.conf\n#COPY doc/supervisor_ops.conf  /etc/supervisord.conf\n\nEXPOSE 80\nCMD ["/usr/bin/supervisord"]\nEOF\n\n')])])]),a("p",[a("strong",[s._v("编译，启动")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#编译镜像")]),s._v("\ndocker build "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -t kerrigan_image\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动")]),s._v("\ndocker-compose up -d\n")])])]),a("p",[a("strong",[s._v("创建数据库")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD} -e 'create database `codo_kerrigan` default character set utf8mb4 collate utf8mb4_unicode_ci;'\n")])])]),a("p",[a("strong",[s._v("初始化表结构")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -ti  kerrigan_codo-kerrigan_1  /usr/local/bin/python3 /var/www/kerrigan/db_sync.py \n")])])]),a("p",[a("strong",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose  restart \n")])])]),a("p",[a("strong",[s._v("测试kerrigan")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 01.日志")]),s._v("\ntailf /var/log/supervisor/kerrigan.log  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#确认没有报错")]),s._v("\n")])])]),a("p",[a("strong",[s._v("配置中心系统部署完成")])]),s._v(" "),a("h2",{attrs:{id:"域名管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#域名管理"}},[s._v("#")]),s._v(" 域名管理")]),s._v(" "),a("blockquote",[a("p",[s._v("CODO域名管理模块，管理BIND 支持智能解析，多域名，多主。")])]),s._v(" "),a("p",[a("strong",[s._v("下载代码")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("[32m [INFO]: codo_dns(域名管理) Start install. "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v('[0m"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /opt/codo\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/opendevops-cn/codo-dns.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" codo-dns\n")])])]),a("p",[a("strong",[s._v("修改配置")])]),s._v(" "),a("blockquote",[a("p",[s._v("同样，这里codo-dns也支持取env环境变量，建议还是修改下默认配置")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#导入环境变量文件，最开始准备的环境变量文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /opt/codo/env.sh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#后端数据库名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CRON_DB_DBNAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'codo_dns'")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#cookie_secret = .*#cookie_secret = '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${cookie_secret}")]),s._v("'#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#mysql配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBHOST = .*#DEFAULT_DB_DBHOST = os.getenv('DEFAULT_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPORT = .*#DEFAULT_DB_DBPORT = os.getenv('DEFAULT_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBUSER = .*#DEFAULT_DB_DBUSER = os.getenv('DEFAULT_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBPWD = .*#DEFAULT_DB_DBPWD = os.getenv('DEFAULT_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DEFAULT_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#DEFAULT_DB_DBNAME = .*#DEFAULT_DB_DBNAME = os.getenv('DEFAULT_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CRON_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只读MySQL配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBHOST = .*#READONLY_DB_DBHOST = os.getenv('READONLY_DB_DBHOST', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBHOST}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPORT = .*#READONLY_DB_DBPORT = os.getenv('READONLY_DB_DBPORT', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPORT}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBUSER = .*#READONLY_DB_DBUSER = os.getenv('READONLY_DB_DBUSER', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBUSER}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBPWD = .*#READONLY_DB_DBPWD = os.getenv('READONLY_DB_DBPWD', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${READONLY_DB_DBPWD}")]),s._v("')#g\"")]),s._v(" settings.py\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s#READONLY_DB_DBNAME = .*#READONLY_DB_DBNAME = os.getenv('READONLY_DB_DBNAME', '"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${CRON_DB_DBNAME}")]),s._v("')#g\"")]),s._v(" settings.py\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("Dockerfile "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/codo-dns\n\n#修改应用配置\nADD settings.py /var/www/codo-dns/\n\n#修改nginx配置和守护配置\n#COPY doc/nginx_ops.conf /etc/nginx/conf.d/default.conf\n#COPY doc/supervisor_ops.conf  /etc/supervisord.conf\n\nEXPOSE 80\nCMD ["/usr/bin/supervisord"]\nEOF')]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("编译，启动")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#编译镜像\ndocker build . -t codo_dns_image\n#启动\ndocker-compose up -d\n")])])]),a("p",[a("strong",[s._v("创建数据库")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("mysql -h127.0.0.1 -uroot -p${MYSQL_PASSWORD} -e 'create database `codo_dns` default character set utf8mb4 collate utf8mb4_unicode_ci;'\n")])])]),a("p",[a("strong",[s._v("初始化表结构")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -ti codo-dns_codo-dns_1  /usr/local/bin/python3 /var/www/codo-dns/db_sync.py\n")])])]),a("p",[a("strong",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker-compose  restart \n")])])]),a("p",[a("strong",[s._v("测试")])]),s._v(" "),a("blockquote",[a("p",[s._v("日志文件位置统一：/var/log/supervisor/")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("01. 查看日志\ntailf /var/log/supervisor/codo_dns.log   #确认没报错\n")])])]),a("p",[a("strong",[s._v("域名管理部署完成")])]),s._v(" "),a("h2",{attrs:{id:"api网关（部署容易出问题的地方）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api网关（部署容易出问题的地方）"}},[s._v("#")]),s._v(" API网关（部署容易出问题的地方）")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("重点部分，请仔细阅读\n由于此项目是模块化、微服务化，因此需要在借助API网关，需要在API网关注册，此步骤是必须的。")])]),s._v(" "),a("p",[a("strong",[s._v("注意事项")])]),s._v(" "),a("p",[s._v("开始之前，你需要确认以下2个事情")]),s._v(" "),a("ul",[a("li",[s._v("DNS服务是否正常，域名能否正常解析")]),s._v(" "),a("li",[s._v("微服务的模块部署是否正常，进行检测")])]),s._v(" "),a("p",[a("strong",[s._v("检查DNS思路")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 确保你的dnsmasql服务是启动的，服务没有报错\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 确保/etc/dnsmasqhosts文件有解析的IP\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 确保你网关的这台机器/etc/resolv.conf DNS执行你刚部署的dnsmasq服务IP\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 确保你网关所在的机器都能正常ping通所有的服务，比如：ping cmdb2.opendevops.cn\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 确保你的防火墙规则是清空的"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("iptables -F"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". 确保你的SELINUX是关闭的"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("setenforce "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),a("p",[a("strong",[s._v("服务健康检测")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 进行所有服务进行检测，返回200则正常\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://mg.opendevops.cn:8010/are_you_ok/\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://task.opendevops.cn:8020/are_you_ok/\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://cmdb2.opendevops.cn:8050/are_you_ok/\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://kerrigan.opendevops.cn:8030/are_you_ok/\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://cron.opendevops.cn:9900/are_you_ok/\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://tools.opendevops.cn:8040/are_you_ok/\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://dns.opendevops.cn:8060/are_you_ok/\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://0.0.0.0:80\n")])])]),a("p",[a("strong",[s._v("下载网关")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo/ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/ss1917/api-gateway.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/codo/api-gateway\n")])])]),a("p",[a("strong",[s._v("修改配置")])]),s._v(" "),a("blockquote",[a("p",[s._v("主要修改"),a("code",[s._v("nginx.conf")]),s._v("配置信息和"),a("code",[s._v("config.lua")]),s._v("配置，具体参考API网关块："),a("a",{attrs:{href:"https://github.com/ss1917/api-gateway/blob/master/README.md#%E4%BA%8C-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("API网关修改配置"),a("OutboundLink")],1)])]),s._v(" "),a("p",[a("strong",[s._v("全局nginx配置")])]),s._v(" "),a("p",[s._v("这里主要修改resolver 内部DNS服务器地址"),a("code",[s._v("conf/nginx.conf")]),s._v(" ==一定要修改==")]),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("root")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_processes")]),s._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_rlimit_nofile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("51200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("error_log")]),s._v(" logs"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("events")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" epoll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_connections")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("51024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置默认lua搜索路径")]),s._v("\n    lua_package_path "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$prefix/lua/?.lua;/blah/?.lua;;'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    lua_code_cache on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#线上环境设置为on, off时可以热加载lua文件")]),s._v("\n    lua_shared_dict user_info "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    lua_shared_dict my_limit_conn_store "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#100M可以放1.6M个键值对")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v("             mime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#代理静态文件")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("client_header_buffer_size")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("large_client_header_buffers")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    init_by_lua_file lua"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("init_by_lua"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lua"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nginx启动时就会执行")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lua生成upstream")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("resolver")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 内部DNS服务器地址 一定要修改 对应起来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("strong",[s._v("网关配置")]),s._v(" "),a("code",[s._v("conf/conf.d/gw.conf")])]),s._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server_name")]),s._v(" gw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("opendevops"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    lua_need_request_body on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启获取body数据记录日志")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### ws 支持")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_http_version")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_set_header")]),s._v(" Upgrade "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_upgrade")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_set_header")]),s._v(" Connection "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"upgrade"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 获取真实IP")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_set_header")]),s._v(" X"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Forwarded"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("For "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$proxy_add_x_forwarded_for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        access_by_lua_file lua"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("access_check"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lua"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_upstream")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_upstream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_upstream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 跨域")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_header")]),s._v(" Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Allow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Methods "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_header")]),s._v(" Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Max"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Age "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3600")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_header")]),s._v(" Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Allow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Credentials "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_header")]),s._v(" Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Allow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Origin "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add_header")]),s._v(" Access"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Allow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Headers "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_access_control_request_headers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$request_method")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("204")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("注册API网关")])]),s._v(" "),a("p",[s._v("请仔细阅读下面需要修改配置的地方"),a("code",[s._v("vim lua/configs.lua")]),s._v(" ==这个配置基本上都要修改，请务必仔细==")]),s._v(" "),a("div",{staticClass:"language-lua extra-class"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[s._v("json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cjson"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- redis配置，一定要修改，并且和codo-admin保持一致，admin会把权限写进去提供网关使用")]),s._v("\nredis_config "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    host "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10.10.10.12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    port "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    auth_pwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cWCVKJ7ZHUK12mVbivUf'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    db "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    alive_time "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3600")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gw'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 注意：这里的token_secret必须要和codo-admin里面的token_secret保持一致")]),s._v("\ntoken_secret "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pXFb4i%*834gfdh96(3df&%18iodGq4ODQyMzc4lz7yI6ImF1dG"')]),s._v("\nlogs_file "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/var/log/gw.log'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--刷新权限到redis接口")]),s._v("\nrewrite_cache_url "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://mg.opendevops.cn:8010/v2/accounts/verify/'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 注意：rewrite_cache_token要和codo-admin里面的secret_key = '8b888a62-3edb-4920-b446-697a472b4001'保持一致")]),s._v("\nrewrite_cache_token "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'8b888a62-3edb-4920-b446-697a472b4001'")]),s._v("  \n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--并发限流配置")]),s._v("\nlimit_conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    rate "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--限制ip每分钟只能调用n*60次接口")]),s._v("\n    burst "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--桶容量,用于平滑处理,最大接收请求次数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--upstream匹配规则,API网关域名")]),s._v("\ngw_domain_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gw.opendevops.cn'")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--下面的转发一定要修改，根据自己实际数据修改")]),s._v("\nrewrite_conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("gw_domain_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        rewrite_urls "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/dns"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dns.opendevops.cn:8060"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/cmdb2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmdb2.opendevops.cn:8050"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/tools"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tools.opendevops.cn:8040"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/kerrigan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kerrigan.opendevops.cn:8030"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/cmdb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmdb.opendevops.cn:8002"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/k8s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k8s.opendevops.cn:8001"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/task"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"task.opendevops.cn:8020"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/cron"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cron.opendevops.cn:9900"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/mg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mg.opendevops.cn:8010"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                uri "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/accounts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                rewrite_upstream "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mg.opendevops.cn:8010"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),a("p",[a("strong",[s._v("修改Dockerfile")])]),s._v(" "),a("p",[s._v("使用自动构建的镜像，默认使用最新版本，这一步的目的是把修改后的配置覆盖进去")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('cat >Dockerfile <<EOF\nFROM registry.cn-shanghai.aliyuncs.com/ss1917/api-gateway\n\n#修改配置\nADD . /usr/local/openresty/nginx/\n\nEXPOSE 80\nCMD ["/usr/bin/openresty", "-g", "daemon off;"]\nEOF\n\n')])])]),a("p",[a("strong",[s._v("编译，启动")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#编译镜像\ndocker build . -t gateway_image\n#启动\ndocker-compose up -d\n")])])]),a("p",[s._v("启动后地址为"),a("code",[s._v("http://gw.opendevops.cn:8888")]),s._v("，这里是和前端的地址有对应，请勿修改")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#测试一下\ncurl -I -X GET -m 10 -o /dev/null -s -w %{http_code} http://gw.opendevops.cn:8888/api/accounts/are_you_ok/\n")])])]),a("blockquote",[a("p",[s._v("提醒:openresty服务器DNS必须指向---\x3e最起初部署的DNS服务器地址,另外若你本机ping以上随便一个域名都不通的话，那你要确认下你本机DNS指向你最初部署了DNS服务器了？ 修改vim /etc/resolv.conf")])]),s._v(" "),a("p",[a("strong",[s._v("访问")])]),s._v(" "),a("p",[a("code",[s._v("注意： demo-init.opendevops.cn 建议修改成自己的域名，也可以绑定hosts来测试一下")]),s._v("  可以再部署前端的时候修改")]),s._v(" "),a("ul",[a("li",[s._v("地址：demo-init.opendevops.cn")]),s._v(" "),a("li",[s._v("用户：admin")]),s._v(" "),a("li",[s._v("密码：admin@opendevops")])]),s._v(" "),a("p",[a("strong",[s._v("日志路径")])]),s._v(" "),a("blockquote",[a("p",[s._v("若这里访问有报错，请看下日志，一般都是配置错误。")])]),s._v(" "),a("ul",[a("li",[s._v("日志路径：所有模块日志统一"),a("code",[s._v("/var/log/supervisor/")])])]),s._v(" "),a("p",[a("strong",[s._v("特别感谢")])]),s._v(" "),a("p",[s._v("感谢大佬 "),a("code",[s._v("shenyingzhi")]),s._v(" 提供测试环境，特此致谢")])])}),[],!1,null,null,null);t.default=e.exports}}]);